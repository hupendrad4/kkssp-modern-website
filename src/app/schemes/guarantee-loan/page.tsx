'use client'

import { motion } from 'framer-motion'
import Image from 'next/image'
import Header from '@/components/layout/Header'
import Footer from '@/components/sections/Footer'
import Card from '@/components/ui/Card'
import Button from '@/components/ui/Button'
import Jumbotron from '@/components/ui/Jumbotron'
import ParallaxSection from '@/components/ui/ParallaxSection'
import AnimatedCounter from '@/components/ui/AnimatedCounter'
import { Banknote, Percent, Clock, CheckCircle, Users, Shield, FileText, Calculator, ArrowRight, Phone } from 'lucide-react'

export default function GuaranteeLoan() {
  const loanFeatures = [
    {
      title: 'рдЙрдЪреНрдЪ рдХрд░реНрдЬ рдорд░реНрдпрд╛рджрд╛',
      description: 'рд░реБ. резрем,режреж,режрежреж/- рдкрд░реНрдпрдВрдд рдХрд░реНрдЬ рдорд┐рд│рд╡рд╛',
      icon: Banknote,
      color: 'from-green-500 to-emerald-600'
    },
    {
      title: 'рд╕реНрдкрд░реНрдзрд╛рддреНрдордХ рд╡реНрдпрд╛рдЬрджрд░',
      description: 'рдлрдХреНрдд рео% рд╡рд╛рд░реНрд╖рд┐рдХ рд╡реНрдпрд╛рдЬрджрд░',
      icon: Percent,
      color: 'from-blue-500 to-cyan-600'
    },
    {
      title: 'рд▓рд╡рдЪрд┐рдХ рдкрд░рддрдлреЗрдб',
      description: 'реорек рд╣рдлреНрддреНрдпрд╛рдВрдордзреНрдпреЗ рд╕реЛрдпреАрд╕реНрдХрд░ рдкрд░рддрдлреЗрдб',
      icon: Clock,
      color: 'from-purple-500 to-violet-600'
    },
    {
      title: 'рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рдкреНрд░рдХреНрд░рд┐рдпрд╛',
      description: 'рдкрд╛рд░рджрд░реНрд╢рдХ рдЖрдгрд┐ рд╕реЛрдпреАрд╕реНрдХрд░ рдХрд░реНрдЬ рдкреНрд░рдХреНрд░рд┐рдпрд╛',
      icon: Shield,
      color: 'from-orange-500 to-red-600'
    }
  ]

  const usageAreas = [
    { title: 'рдШрд░ рдЦрд░реЗрджреА', description: 'рд╕реНрд╡рдкреНрдирд╛рддреАрд▓ рдШрд░ рдЦрд░реЗрджреА рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА', icon: 'ЁЯПа' },
    { title: 'рд╢рд┐рдХреНрд╖рдг', description: 'рдЙрдЪреНрдЪ рд╢рд┐рдХреНрд╖рдгрд╛рд╕рд╛рдареА рдЖрд░реНрдерд┐рдХ рдорджрдд', icon: 'ЁЯУЪ' },
    { title: 'рд╡реИрджреНрдпрдХреАрдп рдЦрд░реНрдЪ', description: 'рдЖрд░реЛрдЧреНрдп рд╕рдВрдмрдВрдзреА рддрд╛рддрдбреАрдЪреНрдпрд╛ рдЦрд░реНрдЪрд╛рд╕рд╛рдареА', icon: 'ЁЯПе' },
    { title: 'рд╡реНрдпрд╛рдкрд╛рд░ рд╡рд┐рд╕реНрддрд╛рд░', description: 'рд╡реНрдпрд╛рдкрд╛рд░ рд╡рд╛рдврд╡рдгреНрдпрд╛рд╕рд╛рдареА рднрд╛рдВрдбрд╡рд▓', icon: 'ЁЯТ╝' },
    { title: 'рд▓рдЧреНрди рд╕рдорд╛рд░рдВрдн', description: 'рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рд╕рдорд╛рд░рдВрднрд╛рдВрд╕рд╛рдареА', icon: 'ЁЯТТ' },
    { title: 'рд╡рд╛рд╣рди рдЦрд░реЗрджреА', description: 'рдХрд╛рд░ рдХрд┐рдВрд╡рд╛ рджреБрдЪрд╛рдХреА рдЦрд░реЗрджреАрд╕рд╛рдареА', icon: 'ЁЯЪЧ' }
  ]

  const applicationProcess = [
    {
      step: 'рез',
      title: 'рдЕрд░реНрдЬ рднрд░рд╛',
      description: 'рд╕рдВрдкреВрд░реНрдг рдЕрд░реНрдЬ рдлреЙрд░реНрдо рднрд░рд╛ рдЖрдгрд┐ рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЬреЛрдбрд╛',
      icon: FileText
    },
    {
      step: 'реи',
      title: 'рджрд╕реНрддрдРрд╡рдЬ рд╕рд╛рджрд░ рдХрд░рд╛',
      description: 'рдЖрдпрдбреА рдкреНрд░реВрдл, рдкрдЧрд╛рд░ рдкреНрд░рдорд╛рдгрдкрддреНрд░ рдЖрдгрд┐ рдЗрддрд░ рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ',
      icon: CheckCircle
    },
    {
      step: 'рей',
      title: 'рддрдкрд╛рд╕рдгреА рдкреНрд░рдХреНрд░рд┐рдпрд╛',
      description: 'рдЖрдордЪреЗ рддрдЬреНрдЮ рддреБрдордЪрд╛ рдЕрд░реНрдЬ рдЖрдгрд┐ рдХрд╛рдЧрджрдкрддреНрд░рд╛рдВрдЪреА рддрдкрд╛рд╕рдгреА рдХрд░рддреАрд▓',
      icon: Users
    },
    {
      step: 'рек',
      title: 'рдХрд░реНрдЬ рдордВрдЬреБрд░реА',
      description: 'рдордВрдЬреБрд░реАрдирдВрддрд░ рд░рдХреНрдХрдо рддреБрдордЪреНрдпрд╛ рдЦрд╛рддреНрдпрд╛рдд рдЬрдорд╛ рдХреЗрд▓реА рдЬрд╛рдИрд▓',
      icon: Banknote
    }
  ]

  const requiredDocuments = [
    'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб',
    'рдкреЕрди рдХрд╛рд░реНрдб',
    'рдкрдЧрд╛рд░ рдкреНрд░рдорд╛рдгрдкрддреНрд░',
    'рдмрдБрдХ рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ (рд╢реЗрд╡рдЯрдЪреЗ рем рдорд╣рд┐рдиреЗ)',
    'рдкрд╛рд╕рдкреЛрд░реНрдЯ рд╕рд╛рдЗрдЬ рдлреЛрдЯреЛ',
    'рдирд┐рд╡рд╛рд╕ рдкреНрд░рдорд╛рдгрдкрддреНрд░',
    'рдЬрд╛рдореАрдирджрд╛рд░рд╛рдЪреА рдХрд╛рдЧрджрдкрддреНрд░реЗ'
  ]

  const benefits = [
    'рдХрдореА рд╡реНрдпрд╛рдЬрджрд░ - рдлрдХреНрдд рео% рд╡рд╛рд░реНрд╖рд┐рдХ',
    'рдЬрд▓рдж рдордВрдЬреБрд░реА рдкреНрд░рдХреНрд░рд┐рдпрд╛',
    'рдХрдореА рдХрд╛рдЧрджрдкрддреНрд░реЗ',
    'рд▓рд╡рдЪрд┐рдХ рдкрд░рддрдлреЗрдб рдкрд░реНрдпрд╛рдп',
    'рдкреНрд░реА-рдкреЗрдореЗрдВрдЯ рд╕реБрд╡рд┐рдзрд╛',
    'рдкрд╛рд░рджрд░реНрд╢рдХ рдЕрдЯреА рд╡ рд╢рд░реНрддреА',
    'реирек/рен рдЧреНрд░рд╛рд╣рдХ рд╕реЗрд╡рд╛',
    'рдСрдирд▓рд╛рдЗрди рдЕрдХрд╛рдЙрдВрдЯ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди'
  ]

  return (
    <main className="min-h-screen">
      <Header />
      {/* Advanced Jumbotron */}
      <Jumbotron
        backgroundImage="https://images.unsplash.com/photo-1554224155-6726b3ff858f?q=80&w=2070&auto=format&fit=crop"
        title="рдЬрд╛рдореАрдирд╛рд╡рд░ рдХрд░реНрдЬ"
        subtitle="рддреБрдордЪреНрдпрд╛ рд╕рд░реНрд╡ рдЖрд░реНрдерд┐рдХ рдЧрд░рдЬрд╛рдВрд╕рд╛рдареА рд░реБ. резрем рд▓рд╛рдЦ рдкрд░реНрдпрдВрдд рдХрд░реНрдЬ - рдлрдХреНрдд рео% рд╡реНрдпрд╛рдЬрджрд░рд╛рд╡рд░ рдЖрдгрд┐ реорек рд╣рдлреНрддреНрдпрд╛рдВрдЪреНрдпрд╛ рд╕реЛрдпреАрд╕реНрдХрд░ рдкрд░рддрдлреЗрдбреАрд╕рд╣"
        height="lg"
        overlay="gradient"
      />

      <section className="py-20 bg-gradient-to-br from-gray-50 to-white">
        <div className="container mx-auto px-4">
          {/* Loan Overview */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-6">рдХрд░реНрдЬрд╛рдЪреА рд╕рдВрдкреВрд░реНрдг рдорд╛рд╣рд┐рддреА</h2>
            <p className="text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
              рдЖрдордЪреА рдЬрд╛рдореАрдирд╛рд╡рд░ рдХрд░реНрдЬ рдпреЛрдЬрдирд╛ рддреБрдордЪреНрдпрд╛ рд╡рд┐рд╡рд┐рдз рдЖрд░реНрдерд┐рдХ рдЧрд░рдЬрд╛рдВрд╕рд╛рдареА рдбрд┐рдЭрд╛рдЗрди рдХреЗрд▓реА рдЧреЗрд▓реА рдЖрд╣реЗ. 
              рд╕реНрдкрд░реНрдзрд╛рддреНрдордХ рд╡реНрдпрд╛рдЬрджрд░ рдЖрдгрд┐ рд╕реЛрдпреАрд╕реНрдХрд░ рдЕрдЯреАрдВрд╕рд╣ рддреБрдордЪреЗ рд╕реНрд╡рдкреНрди рд╕рд╛рдХрд╛рд░ рдХрд░рд╛.
            </p>
          </motion.div>

          {/* Key Features */}
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-20">
            {loanFeatures.map((feature, index) => {
              const IconComponent = feature.icon
              return (
                <motion.div
                  key={feature.title}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ y: -5 }}
                  className="group"
                >
                  <Card className="h-full text-center hover:shadow-2xl transition-all duration-300">
                    <div className={`w-16 h-16 mx-auto mb-4 bg-gradient-to-r ${feature.color} rounded-full flex items-center justify-center`}>
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <h3 className="text-xl font-bold text-gray-800 mb-2">{feature.title}</h3>
                    <p className="text-gray-600">{feature.description}</p>
                  </Card>
                </motion.div>
              )
            })}
          </div>

          {/* Loan Details */}
          <div className="grid lg:grid-cols-2 gap-12 mb-20">
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card className="h-full">
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдХрд░реНрдЬрд╛рдЪреЗ рддрдкрд╢реАрд▓</h3>
                <div className="space-y-6">
                  <div className="flex items-center justify-between p-4 bg-green-50 rounded-lg">
                    <div className="flex items-center space-x-3">
                      <Banknote className="w-6 h-6 text-green-600" />
                      <span className="font-semibold text-gray-800">рдХрд░реНрдЬрд╛рдЪреА рд░рдХреНрдХрдо</span>
                    </div>
                    <span className="text-2xl font-bold text-green-600">тВ╣резрем,режреж,режрежреж</span>
                  </div>
                  
                  <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
                    <div className="flex items-center space-x-3">
                      <Percent className="w-6 h-6 text-blue-600" />
                      <span className="font-semibold text-gray-800">рд╡реНрдпрд╛рдЬрджрд░</span>
                    </div>
                    <span className="text-2xl font-bold text-blue-600">рео% рд╡рд╛рд░реНрд╖рд┐рдХ</span>
                  </div>
                  
                  <div className="flex items-center justify-between p-4 bg-purple-50 rounded-lg">
                    <div className="flex items-center space-x-3">
                      <Clock className="w-6 h-6 text-purple-600" />
                      <span className="font-semibold text-gray-800">рдкрд░рддрдлреЗрдб рдХрд╛рд▓рд╛рд╡рдзреА</span>
                    </div>
                    <span className="text-2xl font-bold text-purple-600">реорек рд╣рдлреНрддреЗ</span>
                  </div>
                </div>
                
                <div className="mt-6 p-4 bg-gradient-to-r from-amber-50 to-orange-50 rounded-lg border-l-4 border-amber-500">
                  <p className="text-gray-700">
                    <strong>рд╡рд┐рд╢реЗрд╖ рд╕реВрдЪрдирд╛:</strong> рд╣реА рдХрд░реНрдЬ рд╕реБрд╡рд┐рдзрд╛ рд╕рднрд╛рд╕рджрд╛рдВрдЪреНрдпрд╛ рдЖрд░реНрдерд┐рдХ рд╕реНрдереИрд░реНрдпрд╛рд╕рд╛рдареА рдЖрдгрд┐ 
                    рддреНрдпрд╛рдВрдЪреНрдпрд╛ рд╡рд┐рд╡рд┐рдз рдЧрд░рдЬрд╛рдВрдЪреА рдкреВрд░реНрддрддрд╛ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдПрдХ рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рд╕рд╛рдзрди рдЖрд╣реЗ.
                  </p>
                </div>
              </Card>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="relative"
            >
              <div className="h-96 rounded-xl overflow-hidden shadow-xl">
                <Image
                  src="https://images.unsplash.com/photo-1559526324-4b87b5e36e44?q=80&w=2070&auto=format&fit=crop"
                  alt="Loan Application Process"
                  fill
                  className="object-cover"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                <div className="absolute bottom-6 left-6 text-white">
                  <h4 className="text-xl font-bold mb-2">рд╕реЛрдкреНрдпрд╛ рдкреНрд░рдХреНрд░рд┐рдпреЗрдд рдХрд░реНрдЬ рдорд┐рд│рд╡рд╛</h4>
                  <p className="text-sm opacity-90">рдЬрд▓рдж рдордВрдЬреБрд░реА рдЖрдгрд┐ рдХрдореА рдХрд╛рдЧрджрдкрддреНрд░реЗ</p>
                </div>
              </div>
            </motion.div>
          </div>

          {/* Usage Areas */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдХрд░реНрдЬрд╛рдЪрд╛ рд╡рд╛рдкрд░</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {usageAreas.map((area, index) => (
                <motion.div
                  key={area.title}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ scale: 1.05 }}
                >
                  <Card className="text-center p-6 hover:shadow-lg transition-all duration-300">
                    <div className="text-4xl mb-3">{area.icon}</div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">{area.title}</h4>
                    <p className="text-gray-600 text-sm">{area.description}</p>
                  </Card>
                </motion.div>
              ))}
            </div>
          </motion.div>

          {/* Application Process */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдЕрд░реНрдЬрд╛рдЪреА рдкреНрд░рдХреНрд░рд┐рдпрд╛</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {applicationProcess.map((process, index) => {
                const IconComponent = process.icon
                return (
                  <motion.div
                    key={process.step}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.2 }}
                    viewport={{ once: true }}
                    className="text-center relative"
                  >
                    <div className="relative mb-4">
                      <div className="w-16 h-16 mx-auto bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
                        {process.step}
                      </div>
                      {index < applicationProcess.length - 1 && (
                        <div className="hidden lg:block absolute top-8 left-full w-full h-0.5 bg-gradient-to-r from-primary-300 to-secondary-300 transform -translate-y-1/2"></div>
                      )}
                    </div>
                    <div className="mb-3">
                      <IconComponent className="w-8 h-8 mx-auto text-gray-600" />
                    </div>
                    <h4 className="text-lg font-semibold text-gray-800 mb-2">{process.title}</h4>
                    <p className="text-gray-600 text-sm">{process.description}</p>
                  </motion.div>
                )
              })}
            </div>
          </motion.div>

          {/* Required Documents & Benefits */}
          <div className="grid lg:grid-cols-2 gap-12 mb-20">
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card>
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ</h3>
                <div className="space-y-3">
                  {requiredDocuments.map((document, index) => (
                    <motion.div
                      key={document}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.4, delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-center space-x-3"
                    >
                      <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                      <span className="text-gray-700">{document}</span>
                    </motion.div>
                  ))}
                </div>
              </Card>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card>
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдореБрдЦреНрдп рдлрд╛рдпрджреЗ</h3>
                <div className="space-y-3">
                  {benefits.map((benefit, index) => (
                    <motion.div
                      key={benefit}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.4, delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-center space-x-3"
                    >
                      <CheckCircle className="w-5 h-5 text-blue-500 flex-shrink-0" />
                      <span className="text-gray-700">{benefit}</span>
                    </motion.div>
                  ))}
                </div>
              </Card>
            </motion.div>
          </div>

          {/* CTA Section */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center"
          >
            <Card className="bg-gradient-to-r from-primary-50 to-secondary-50">
              <h3 className="text-2xl font-bold text-gray-800 mb-4">рдЖрдЬ рд╣реА рдЕрд░реНрдЬ рдХрд░рд╛!</h3>
              <p className="text-gray-600 mb-6">
                рддреБрдордЪреНрдпрд╛ рдЖрд░реНрдерд┐рдХ рдЧрд░рдЬрд╛ рдкреВрд░реНрдг рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрдордЪреНрдпрд╛ рдЬрд╛рдореАрдирд╛рд╡рд░ рдХрд░реНрдЬ рдпреЛрдЬрдирд╛рдЪрд╛ рд▓рд╛рдн рдШреНрдпрд╛
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button size="lg" className="flex items-center space-x-2">
                  <FileText className="w-5 h-5" />
                  <span>рдСрдирд▓рд╛рдЗрди рдЕрд░реНрдЬ рдХрд░рд╛</span>
                  <ArrowRight className="w-5 h-5" />
                </Button>
                <Button variant="outline" size="lg" className="flex items-center space-x-2">
                  <Phone className="w-5 h-5" />
                  <span>рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛</span>
                </Button>
              </div>
            </Card>
          </motion.div>
        </div>
      </section>

      {/* Parallax Section with Success Stories */}
      <ParallaxSection
        backgroundImage="https://images.unsplash.com/photo-1450101499163-c8848c66ca85?q=80&w=2070&auto=format&fit=crop"
        className="py-20"
      >
        <div className="container mx-auto px-4 text-center text-white">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h3 className="text-4xl font-bold mb-6">рдЖрдордЪреА рдпрд╢рдЧрд╛рдерд╛</h3>
            <p className="text-xl mb-12 max-w-3xl mx-auto opacity-90">
              рд╣рдЬрд╛рд░реЛ рдХреБрдЯреБрдВрдмрд╛рдВрдЪреНрдпрд╛ рд╕реНрд╡рдкреНрдирд╛рдВрдирд╛ рд╕рд╛рдХрд╛рд░ рдХрд░рдгреНрдпрд╛рдд рдЖрдореНрд╣реА рдпрд╢рд╕реНрд╡реА рдЭрд╛рд▓реЛ рдЖрд╣реЛрдд
            </p>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={1500} suffix="+" />
                </div>
                <div className="text-sm opacity-90">рдЬрд╛рдореАрдирд╛рд╡рд░ рдХрд░реНрдЬ рдордВрдЬреВрд░</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={25} suffix=" рдХреЛрдЯреА+" />
                </div>
                <div className="text-sm opacity-90">рдХрд░реНрдЬ рд╡рд┐рддрд░рдг</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={99} suffix="%" />
                </div>
                <div className="text-sm opacity-90">рдкрд░рддрдлреЗрдб рджрд░</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={7} suffix=" рджрд┐рд╡рд╕" />
                </div>
                <div className="text-sm opacity-90">рд╕рд░рд╛рд╕рд░реА рдордВрдЬреБрд░реА рд╡реЗрд│</div>
              </div>
            </div>
          </motion.div>
        </div>
      </ParallaxSection>
      <Footer />
    </main>
  )
}
