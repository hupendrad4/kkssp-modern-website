'use client'

import { motion } from 'framer-motion'
import Image from 'next/image'
import Header from '@/components/layout/Header'
import Footer from '@/components/sections/Footer'
import Card from '@/components/ui/Card'
import Button from '@/components/ui/Button'
import Jumbotron from '@/components/ui/Jumbotron'
import ParallaxSection from '@/components/ui/ParallaxSection'
import AnimatedCounter from '@/components/ui/AnimatedCounter'
import { Banknote, Percent, Clock, CheckCircle, Users, Shield, FileText, Calculator, ArrowRight, Phone, Zap, Heart } from 'lucide-react'

export default function OccasionalLoan() {
  const loanFeatures = [
    {
      title: 'рддрд╛рддрдбреАрдЪреА рд░рдХреНрдХрдо',
      description: 'рд░реБ. релреж,режрежреж/- рдкрд░реНрдпрдВрдд рддрд╛рддрдбреАрдиреЗ рдХрд░реНрдЬ',
      icon: Zap,
      color: 'from-red-500 to-pink-600'
    },
    {
      title: 'рдХрдореА рд╡реНрдпрд╛рдЬрджрд░',
      description: 'рдлрдХреНрдд рем% рд╡рд╛рд░реНрд╖рд┐рдХ рд╡реНрдпрд╛рдЬрджрд░',
      icon: Percent,
      color: 'from-green-500 to-emerald-600'
    },
    {
      title: 'рдЬрд▓рдж рдордВрдЬреБрд░реА',
      description: 'реирек рддрд╛рд╕рд╛рдВрдд рдХрд░реНрдЬ рдордВрдЬреБрд░реА',
      icon: Clock,
      color: 'from-blue-500 to-cyan-600'
    },
    {
      title: 'рд╕реЛрдпреАрд╕реНрдХрд░ рдкрд░рддрдлреЗрдб',
      description: 'реирек рд╣рдлреНрддреНрдпрд╛рдВрдордзреНрдпреЗ рдкрд░рддрдлреЗрдб',
      icon: Shield,
      color: 'from-purple-500 to-violet-600'
    }
  ]

  const emergencyUses = [
    { title: 'рд╡реИрджреНрдпрдХреАрдп рдЖрдгреАрдмрд╛рдгреА', description: 'рдЕрдЪрд╛рдирдХ рдЖрд▓реЗрд▓реНрдпрд╛ рдЖрдЬрд╛рд░рдкрдгрд╛рд╕рд╛рдареА', icon: 'ЁЯПе', urgency: 'рдЕрддреНрдпрд╛рд╡рд╢реНрдпрдХ' },
    { title: 'рд╢реИрдХреНрд╖рдгрд┐рдХ рдлреА', description: 'рдореБрд▓рд╛рдВрдЪреНрдпрд╛ рд╢рд┐рдХреНрд╖рдгрд╛рд╕рд╛рдареА рддрд╛рддрдбреАрдЪреА рд░рдХреНрдХрдо', icon: 'ЁЯУЪ', urgency: 'рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ' },
    { title: 'рдШрд░рдЧреБрддреА рджреБрд░реБрд╕реНрддреА', description: 'рдШрд░рд╛рддреАрд▓ рддрд╛рддрдбреАрдЪреНрдпрд╛ рджреБрд░реБрд╕реНрддреАрд╕рд╛рдареА', icon: 'ЁЯПа', urgency: 'рдЖрд╡рд╢реНрдпрдХ' },
    { title: 'рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рд╕рдорд╛рд░рдВрдн', description: 'рд▓рдЧреНрди, рдореБрдВрдбрди рдЗрддреНрдпрд╛рджреА рд╕рдорд╛рд░рдВрднрд╛рдВрд╕рд╛рдареА', icon: 'ЁЯОЙ', urgency: 'рд╕рд╛рдорд╛рдЬрд┐рдХ' },
    { title: 'рдХреГрд╖реА рдЖрд╡рд╢реНрдпрдХрддрд╛', description: 'рдкрд┐рдХрд╛рдЪреНрдпрд╛ рд╣рдВрдЧрд╛рдорд╛рддреАрд▓ рддрд╛рддрдбреАрдЪреА рдЧрд░рдЬ', icon: 'ЁЯМ╛', urgency: 'рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ' },
    { title: 'рд╡рд╛рд╣рди рджреБрд░реБрд╕реНрддреА', description: 'рд╡рд╛рд╣рдирд╛рдЪреНрдпрд╛ рдЕрдЪрд╛рдирдХ рдмрд┐рдШрдбрд▓реЗрд▓реНрдпрд╛ рджреБрд░реБрд╕реНрддреАрд╕рд╛рдареА', icon: 'ЁЯЪЧ', urgency: 'рддрд╛рддрдбреАрдЪреЗ' }
  ]

  const loanProcess = [
    {
      step: 'рез',
      title: 'рддрд╛рддрдбреАрдЪрд╛ рдЕрд░реНрдЬ',
      description: 'рдлреЛрди рдХрд┐рдВрд╡рд╛ рдСрдирд▓рд╛рдЗрди рддрд╛рддрдбреАрдЪрд╛ рдЕрд░реНрдЬ рдХрд░рд╛',
      icon: Phone,
      time: 'рел рдорд┐рдирд┐рдЯреЗ'
    },
    {
      step: 'реи',
      title: 'рддреНрд╡рд░рд┐рдд рддрдкрд╛рд╕рдгреА',
      description: 'рдЖрдордЪреЗ рддрдЬреНрдЮ рддреБрдордЪрд╛ рдЕрд░реНрдЬ рддреНрд╡рд░рд┐рдд рддрдкрд╛рд╕рддреАрд▓',
      icon: Users,
      time: 'реи рддрд╛рд╕'
    },
    {
      step: 'рей',
      title: 'рдЬрд▓рдж рдордВрдЬреБрд░реА',
      description: 'рдпреЛрдЧреНрдпрддрд╛ рддрдкрд╛рд╕реВрди реирек рддрд╛рд╕рд╛рдВрдд рдордВрдЬреБрд░реА',
      icon: CheckCircle,
      time: 'реирек рддрд╛рд╕'
    },
    {
      step: 'рек',
      title: 'рд░рдХреНрдХрдо рд╣рд╕реНрддрд╛рдВрддрд░рдг',
      description: 'рдордВрдЬреБрд░реАрдирдВрддрд░ рд▓рдЧреЗрдЪ рд░рдХреНрдХрдо рдЦрд╛рддреНрдпрд╛рдд',
      icon: Banknote,
      time: 'рддрддреНрдХрд╛рд│'
    }
  ]

  const eligibilityCriteria = [
    'рд╕рдВрд╕реНрдереЗрдЪреЗ рд╕рднрд╛рд╕рдж рдЕрд╕рдгреЗ рдЖрд╡рд╢реНрдпрдХ',
    'рдХрд┐рдорд╛рди рем рдорд╣рд┐рдиреНрдпрд╛рдВрдЪреЗ рд╕рднрд╛рд╕рджрддреНрд╡',
    'рдирд┐рдпрдорд┐рдд рдкрдЧрд╛рд░ рдкреНрд░рдорд╛рдгрдкрддреНрд░',
    'рдЖрдзреАрдЪреЗ рдХрд░реНрдЬ рдЪреБрдХрддреЗ рдХреЗрд▓реЗрд▓реЗ рдЕрд╕рд╛рд╡реЗ',
    'рдЬрд╛рдореАрдирджрд╛рд░ рдЙрдкрд▓рдмреНрдз рдЕрд╕рд╛рд╡рд╛',
    'рд╡реИрдз рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб рдЖрдгрд┐ рдкреЕрди рдХрд╛рд░реНрдб'
  ]

  const repaymentOptions = [
    {
      title: 'рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рд╣рдкреНрддрд╛',
      description: 'рджрд░ рдЖрдард╡рдбреНрдпрд╛рд▓рд╛ рд╕реЛрдпреАрд╕реНрдХрд░ рд╣рдкреНрддрд╛',
      amount: 'реи,реирежреж/-',
      period: 'реирек рдЖрдард╡рдбреЗ',
      icon: 'ЁЯУЕ'
    },
    {
      title: 'рдкрд╛рдХреНрд╖рд┐рдХ рд╣рдкреНрддрд╛',
      description: 'рджрд░ рдкрдВрдзрд░рд╛ рджрд┐рд╡рд╕рд╛рдВрдиреА рд╣рдкреНрддрд╛',
      amount: 'рек,рекрежреж/-',
      period: 'резреи рдкрд╛рдХреНрд╖рд┐рдХ',
      icon: 'ЁЯЧУя╕П'
    },
    {
      title: 'рдорд╛рд╕рд┐рдХ рд╣рдкреНрддрд╛',
      description: 'рджрд░ рдорд╣рд┐рдиреНрдпрд╛рд▓рд╛ рдПрдХрдЪ рд╣рдкреНрддрд╛',
      amount: 'рео,реорежреж/-',
      period: 'рем рдорд╣рд┐рдиреЗ',
      icon: 'ЁЯУЖ'
    }
  ]

  const benefits = [
    'рдХрдореА рд╡реНрдпрд╛рдЬрджрд░ - рдлрдХреНрдд рем% рд╡рд╛рд░реНрд╖рд┐рдХ',
    'рдЬрд▓рдж рдордВрдЬреБрд░реА - реирек рддрд╛рд╕рд╛рдВрдд',
    'рдХрдореА рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЖрд╡рд╢реНрдпрдХ',
    'рд▓рд╡рдЪрд┐рдХ рдкрд░рддрдлреЗрдб рдкрд░реНрдпрд╛рдп',
    'рдХреЛрдгрддреЗрд╣реА рдЫреБрдкреЗ рд╢реБрд▓реНрдХ рдирд╛рд╣реА',
    'рддрд╛рддрдбреАрдЪреНрдпрд╛ рдкрд░рд┐рд╕реНрдерд┐рддреАрдд рдкреНрд░рд╛рдзрд╛рдиреНрдп',
    'рдСрдирд▓рд╛рдЗрди рдЕрд░реНрдЬ рд╕реБрд╡рд┐рдзрд╛',
    'рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╕рд▓реНрд▓рд╛ рдЙрдкрд▓рдмреНрдз'
  ]

  return (
    <main className="min-h-screen">
      <Header />
      {/* Advanced Jumbotron */}
      <Jumbotron
        backgroundImage="https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=2070&auto=format&fit=crop"
        title="рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдХрд░реНрдЬ"
        subtitle="рддрд╛рддрдбреАрдЪреНрдпрд╛ рдЖрд░реНрдерд┐рдХ рдЧрд░рдЬрд╛рдВрд╕рд╛рдареА рд░реБ. релреж,режрежреж/- рдкрд░реНрдпрдВрдд рдХрд░реНрдЬ - рдлрдХреНрдд рем% рд╡реНрдпрд╛рдЬрджрд░рд╛рд╡рд░ рдЖрдгрд┐ реирек рддрд╛рд╕рд╛рдВрдЪреНрдпрд╛ рдЬрд▓рдж рдордВрдЬреБрд░реАрд╕рд╣"
        height="lg"
        overlay="gradient"
      />

      <section className="py-20 bg-gradient-to-br from-gray-50 to-white">
        <div className="container mx-auto px-4">
          {/* Emergency Loan Overview */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-6">рддрд╛рддрдбреАрдЪреНрдпрд╛ рдЧрд░рдЬрд╛рдВрд╕рд╛рдареА рддрддреНрдХрд╛рд│ рдХрд░реНрдЬ</h2>
            <p className="text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
              рдЬреАрд╡рдирд╛рддреАрд▓ рдЕрдЪрд╛рдирдХ рдЖрд▓реЗрд▓реНрдпрд╛ рдЖрд░реНрдерд┐рдХ рдЧрд░рдЬрд╛рдВрд╕рд╛рдареА рдЖрдордЪреА рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдХрд░реНрдЬ рдпреЛрдЬрдирд╛ рддреБрдордЪреНрдпрд╛ рд╕реЗрд╡реЗрдд рдЖрд╣реЗ. 
              рдЬрд▓рдж рдордВрдЬреБрд░реА, рдХрдореА рд╡реНрдпрд╛рдЬрджрд░ рдЖрдгрд┐ рд╕реЛрдпреАрд╕реНрдХрд░ рдЕрдЯреАрдВрд╕рд╣ рддреБрдордЪреА рд╕рдорд╕реНрдпрд╛ рд╕реЛрдбрд╡рд╛.
            </p>
          </motion.div>

          {/* Key Features */}
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-20">
            {loanFeatures.map((feature, index) => {
              const IconComponent = feature.icon
              return (
                <motion.div
                  key={feature.title}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ y: -5 }}
                  className="group"
                >
                  <Card className="h-full text-center hover:shadow-2xl transition-all duration-300">
                    <div className={`w-16 h-16 mx-auto mb-4 bg-gradient-to-r ${feature.color} rounded-full flex items-center justify-center`}>
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <h3 className="text-xl font-bold text-gray-800 mb-2">{feature.title}</h3>
                    <p className="text-gray-600">{feature.description}</p>
                  </Card>
                </motion.div>
              )
            })}
          </div>

          {/* Loan Details Card */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <Card className="bg-gradient-to-r from-red-50 to-pink-50 border-red-200">
              <div className="grid lg:grid-cols-3 gap-8">
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-red-500 to-pink-600 rounded-full flex items-center justify-center">
                    <Banknote className="w-10 h-10 text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800 mb-2">рдХрд░реНрдЬрд╛рдЪреА рд░рдХреНрдХрдо</h3>
                  <p className="text-3xl font-bold text-red-600">тВ╣релреж,режрежреж</p>
                  <p className="text-gray-600 text-sm mt-1">рдЕрдзрд┐рдХрддрдо рдорд░реНрдпрд╛рджрд╛</p>
                </div>
                
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-green-500 to-emerald-600 rounded-full flex items-center justify-center">
                    <Percent className="w-10 h-10 text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800 mb-2">рд╡реНрдпрд╛рдЬрджрд░</h3>
                  <p className="text-3xl font-bold text-green-600">рем% рд╡рд╛рд░реНрд╖рд┐рдХ</p>
                  <p className="text-gray-600 text-sm mt-1">рд╕реНрдкрд░реНрдзрд╛рддреНрдордХ рджрд░</p>
                </div>
                
                <div className="text-center">
                  <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-cyan-600 rounded-full flex items-center justify-center">
                    <Clock className="w-10 h-10 text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-800 mb-2">рдкрд░рддрдлреЗрдб рдХрд╛рд▓рд╛рд╡рдзреА</h3>
                  <p className="text-3xl font-bold text-blue-600">реирек рдЖрдард╡рдбреЗ</p>
                  <p className="text-gray-600 text-sm mt-1">рд▓рд╡рдЪрд┐рдХ рдкрд░реНрдпрд╛рдп</p>
                </div>
              </div>
            </Card>
          </motion.div>

          {/* Emergency Uses */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдХрд░реНрдЬрд╛рдЪрд╛ рд╡рд╛рдкрд░</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {emergencyUses.map((use, index) => (
                <motion.div
                  key={use.title}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ scale: 1.05 }}
                >
                  <Card className="h-full hover:shadow-lg transition-all duration-300">
                    <div className="flex items-start space-x-4">
                      <div className="text-4xl">{use.icon}</div>
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="text-lg font-bold text-gray-800">{use.title}</h4>
                          <span className={`text-xs px-2 py-1 rounded-full ${
                            use.urgency === 'рдЕрддреНрдпрд╛рд╡рд╢реНрдпрдХ' ? 'bg-red-100 text-red-800' :
                            use.urgency === 'рдорд╣рддреНрддреНрд╡рд╛рдЪреЗ' ? 'bg-orange-100 text-orange-800' :
                            use.urgency === 'рддрд╛рддрдбреАрдЪреЗ' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-blue-100 text-blue-800'
                          }`}>
                            {use.urgency}
                          </span>
                        </div>
                        <p className="text-gray-600 text-sm">{use.description}</p>
                      </div>
                    </div>
                  </Card>
                </motion.div>
              ))}
            </div>
          </motion.div>

          {/* Loan Process */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рддрд╛рддрдбреАрдЪреА рдХрд░реНрдЬ рдкреНрд░рдХреНрд░рд┐рдпрд╛</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {loanProcess.map((process, index) => {
                const IconComponent = process.icon
                return (
                  <motion.div
                    key={process.step}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.2 }}
                    viewport={{ once: true }}
                    className="text-center relative"
                  >
                    <div className="relative mb-4">
                      <div className="w-16 h-16 mx-auto bg-gradient-to-r from-red-500 to-pink-600 rounded-full flex items-center justify-center text-white text-2xl font-bold">
                        {process.step}
                      </div>
                      {index < loanProcess.length - 1 && (
                        <div className="hidden lg:block absolute top-8 left-full w-full h-0.5 bg-gradient-to-r from-red-300 to-pink-300 transform -translate-y-1/2"></div>
                      )}
                    </div>
                    <div className="mb-3">
                      <IconComponent className="w-8 h-8 mx-auto text-gray-600" />
                    </div>
                    <h4 className="text-lg font-semibold text-gray-800 mb-2">{process.title}</h4>
                    <p className="text-gray-600 text-sm mb-2">{process.description}</p>
                    <div className="inline-block bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">
                      {process.time}
                    </div>
                  </motion.div>
                )
              })}
            </div>
          </motion.div>

          {/* Eligibility & Repayment Options */}
          <div className="grid lg:grid-cols-2 gap-12 mb-20">
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card>
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдкрд╛рддреНрд░рддрд╛ рдирд┐рдХрд╖</h3>
                <div className="space-y-3">
                  {eligibilityCriteria.map((criteria, index) => (
                    <motion.div
                      key={criteria}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.4, delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-center space-x-3"
                    >
                      <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                      <span className="text-gray-700">{criteria}</span>
                    </motion.div>
                  ))}
                </div>
                
                <div className="mt-6 p-4 bg-blue-50 rounded-lg border-l-4 border-blue-500">
                  <p className="text-blue-800 text-sm">
                    <strong>рд╕реВрдЪрдирд╛:</strong> рддрд╛рддрдбреАрдЪреНрдпрд╛ рдкрд░рд┐рд╕реНрдерд┐рддреАрдд рдХрд╛рд╣реА рдирд┐рдХрд╖ рд╢рд┐рдерд┐рд▓ рдХреЗрд▓реЗ рдЬрд╛рдК рд╢рдХрддрд╛рдд.
                  </p>
                </div>
              </Card>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card>
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдкрд░рддрдлреЗрдб рдкрд░реНрдпрд╛рдп</h3>
                <div className="space-y-4">
                  {repaymentOptions.map((option, index) => (
                    <motion.div
                      key={option.title}
                      initial={{ opacity: 0, y: 20 }}
                      whileInView={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.5, delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors"
                    >
                      <div className="flex items-center justify-between mb-2">
                        <div className="flex items-center space-x-3">
                          <span className="text-2xl">{option.icon}</span>
                          <h4 className="font-semibold text-gray-800">{option.title}</h4>
                        </div>
                        <span className="text-lg font-bold text-primary-600">{option.amount}</span>
                      </div>
                      <p className="text-gray-600 text-sm mb-1">{option.description}</p>
                      <p className="text-gray-500 text-xs">{option.period}</p>
                    </motion.div>
                  ))}
                </div>
              </Card>
            </motion.div>
          </div>

          {/* Benefits */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <Card className="bg-gradient-to-r from-green-50 to-emerald-50">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 text-center">рдореБрдЦреНрдп рдлрд╛рдпрджреЗ</h3>
              <div className="grid md:grid-cols-2 gap-4">
                {benefits.map((benefit, index) => (
                  <motion.div
                    key={benefit}
                    initial={{ opacity: 0, x: -20 }}
                    whileInView={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.4, delay: index * 0.1 }}
                    viewport={{ once: true }}
                    className="flex items-center space-x-3 bg-white p-3 rounded-lg shadow-sm"
                  >
                    <CheckCircle className="w-5 h-5 text-green-500 flex-shrink-0" />
                    <span className="text-gray-700">{benefit}</span>
                  </motion.div>
                ))}
              </div>
            </Card>
          </motion.div>

          {/* Emergency Contact CTA */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center"
          >
            <Card className="bg-gradient-to-r from-red-50 to-pink-50 border-red-200">
              <div className="flex items-center justify-center mb-4">
                <Heart className="w-8 h-8 text-red-600 mr-2" />
                <h3 className="text-2xl font-bold text-gray-800">рддрд╛рддрдбреАрдЪреА рдЧрд░рдЬ рдЖрд╣реЗ?</h3>
              </div>
              <p className="text-gray-600 mb-6">
                рдЖрдкрддреНрдХрд╛рд▓реАрди рдкрд░рд┐рд╕реНрдерд┐рддреАрдд рдЖрдореНрд╣реА рддреБрдордЪреНрдпрд╛ рд╕реЗрд╡реЗрдд рдЖрд╣реЛрдд. рдЖрдордЪреНрдпрд╛рд╢реА рд▓рдЧреЗрдЪ рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button size="lg" className="bg-red-600 hover:bg-red-700 flex items-center space-x-2">
                  <Phone className="w-5 h-5" />
                  <span>рддрд╛рддрдбреАрдиреЗ рдХреЙрд▓ рдХрд░рд╛</span>
                </Button>
                <Button variant="outline" size="lg" className="border-red-600 text-red-600 hover:bg-red-50 flex items-center space-x-2">
                  <FileText className="w-5 h-5" />
                  <span>рдСрдирд▓рд╛рдЗрди рдЕрд░реНрдЬ рдХрд░рд╛</span>
                  <ArrowRight className="w-5 h-5" />
                </Button>
              </div>
              
              <div className="mt-6 p-4 bg-white rounded-lg border border-red-200">
                <p className="text-red-800 font-semibold text-center">
                  рдЖрдкрддреНрдХрд╛рд▓реАрди рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: <a href="tel:+919876543210" className="underline">+91 98765 43210</a>
                </p>
                <p className="text-red-600 text-sm text-center mt-1">реирек рддрд╛рд╕ рдЙрдкрд▓рдмреНрдз</p>
              </div>
            </Card>
          </motion.div>
        </div>
      </section>

      {/* Parallax Section with Success Stories */}
      <ParallaxSection
        backgroundImage="https://images.unsplash.com/photo-1551836022-deb4988cc6c0?q=80&w=2070&auto=format&fit=crop"
        className="py-20"
      >
        <div className="container mx-auto px-4 text-center text-white">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h3 className="text-4xl font-bold mb-6">рддрд╛рддрдбреАрдЪреНрдпрд╛ рдорджрддреАрдЪреА рдЖрдХрдбреЗрд╡рд╛рд░реА</h3>
            <p className="text-xl mb-12 max-w-3xl mx-auto opacity-90">
              рдЖрдкрддреНрдХрд╛рд▓реАрди рдкрд░рд┐рд╕реНрдерд┐рддреАрдд рдЖрдореНрд╣реА рд╣рдЬрд╛рд░реЛ рдХреБрдЯреБрдВрдмрд╛рдВрдирд╛ рдорджрдд рдХреЗрд▓реА рдЖрд╣реЗ
            </p>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={800} suffix="+" />
                </div>
                <div className="text-sm opacity-90">рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдХрд░реНрдЬ рдордВрдЬреВрд░</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={2} suffix=" рдХреЛрдЯреА+" />
                </div>
                <div className="text-sm opacity-90">рддрд╛рддрдбреАрдЪреА рдорджрдд</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={18} suffix=" рддрд╛рд╕" />
                </div>
                <div className="text-sm opacity-90">рд╕рд░рд╛рд╕рд░реА рдордВрдЬреБрд░реА рд╡реЗрд│</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">
                  <AnimatedCounter from={0} to={100} suffix="%" />
                </div>
                <div className="text-sm opacity-90">рдЧреНрд░рд╛рд╣рдХ рд╕рдорд╛рдзрд╛рди</div>
              </div>
            </div>
          </motion.div>
        </div>
      </ParallaxSection>
      <Footer />
    </main>
  )
}
