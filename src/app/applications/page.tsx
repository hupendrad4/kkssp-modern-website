'use client'

import { motion } from 'framer-motion'
import Image from 'next/image'
import Header from '@/components/layout/Header'
import Footer from '@/components/sections/Footer'
import Card from '@/components/ui/Card'
import Button from '@/components/ui/Button'
import Jumbotron from '@/components/ui/Jumbotron'
import ParallaxSection from '@/components/ui/ParallaxSection'
import AnimatedCounter from '@/components/ui/AnimatedCounter'
import { FileText, Download, Users, Banknote, CreditCard, UserPlus, Phone, Mail, CheckCircle, Clock, ArrowRight, Lightbulb, MapPin } from 'lucide-react'

export default function Applications() {
  const applicationForms = [
    {
      title: 'рд╕рджрд╕реНрдпрддреНрд╡ рдЕрд░реНрдЬ',
      description: 'рдирд╡реАрди рд╕рджрд╕реНрдпрддреНрд╡рд╛рд╕рд╛рдареА рдЕрд░реНрдЬ рдлреЙрд░реНрдо',
      icon: UserPlus,
      category: 'рд╕рджрд╕реНрдпрддреНрд╡',
      requirements: ['рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб', 'рдкреЕрди рдХрд╛рд░реНрдб', 'рдкрд╛рд╕рдкреЛрд░реНрдЯ рдлреЛрдЯреЛ', 'рдкрдЧрд╛рд░ рдкреНрд░рдорд╛рдгрдкрддреНрд░'],
      processingTime: 'рен рджрд┐рд╡рд╕',
      fees: 'тВ╣релрежреж',
      color: 'from-blue-500 to-cyan-600'
    },
    {
      title: 'рдЬрд╛рдореАрдирд╛рд╡рд░ рдХрд░реНрдЬ рдЕрд░реНрдЬ',
      description: 'рд░реБ. резрем рд▓рд╛рдЦ рдкрд░реНрдпрдВрдд рдХрд░реНрдЬрд╛рд╕рд╛рдареА рдЕрд░реНрдЬ',
      icon: Banknote,
      category: 'рдХрд░реНрдЬ',
      requirements: ['рд╕рджрд╕реНрдпрддреНрд╡ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдкрдЧрд╛рд░ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдЬрд╛рдореАрдирджрд╛рд░ рдХрд╛рдЧрджрдкрддреНрд░реЗ', 'рдмрдБрдХ рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ'],
      processingTime: 'резрел рджрд┐рд╡рд╕',
      fees: 'тВ╣рез,режрежреж',
      color: 'from-green-500 to-emerald-600'
    },
    {
      title: 'рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рдХрд░реНрдЬ рдЕрд░реНрдЬ',
      description: 'рддрд╛рддрдбреАрдЪреНрдпрд╛ рдЧрд░рдЬреЗрд╕рд╛рдареА рдХрд░реНрдЬ рдЕрд░реНрдЬ',
      icon: CreditCard,
      category: 'рдХрд░реНрдЬ',
      requirements: ['рд╕рджрд╕реНрдпрддреНрд╡ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб', 'рдЬрд╛рдореАрдирджрд╛рд░', 'рдХрд╛рд░рдг рдкрддреНрд░'],
      processingTime: 'реирек рддрд╛рд╕',
      fees: 'тВ╣релрежреж',
      color: 'from-red-500 to-pink-600'
    },
    {
      title: 'рд╢реЗрдЕрд░ рдЦрд░реЗрджреА рдЕрд░реНрдЬ',
      description: 'рдЕрддрд┐рд░рд┐рдХреНрдд рд╢реЗрдЕрд░реНрд╕ рдЦрд░реЗрджреАрд╕рд╛рдареА рдЕрд░реНрдЬ',
      icon: FileText,
      category: 'рдЧреБрдВрддрд╡рдгреВрдХ',
      requirements: ['рд╕рджрд╕реНрдпрддреНрд╡ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдмрдБрдХ рдЪреЗрдХ/DD', 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб'],
      processingTime: 'рей рджрд┐рд╡рд╕',
      fees: 'рдХреЛрдгрддреЗрд╣реА рдирд╛рд╣реА',
      color: 'from-purple-500 to-violet-600'
    },
    {
      title: 'рдирд╛рдорд╛рдВрддрд░ рдЕрд░реНрдЬ',
      description: 'рд╕рджрд╕реНрдпрддреНрд╡ рдирд╛рдорд╛рдВрддрд░рд╛рд╕рд╛рдареА рдЕрд░реНрдЬ',
      icon: Users,
      category: 'рд╕реЗрд╡рд╛',
      requirements: ['рдореВрд│ рд╕рджрд╕реНрдпрддреНрд╡ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдирд╡реАрди рд╕рджрд╕реНрдпрд╛рдЪреА рдХрд╛рдЧрджрдкрддреНрд░реЗ', 'рдирд╛рдорд╛рдВрддрд░ рд╢реБрд▓реНрдХ'],
      processingTime: 'резреж рджрд┐рд╡рд╕',
      fees: 'тВ╣реирежреж',
      color: 'from-orange-500 to-red-600'
    },
    {
      title: 'рдкреНрд░рдорд╛рдгрдкрддреНрд░ рдЕрд░реНрдЬ',
      description: 'рд╡рд┐рд╡рд┐рдз рдкреНрд░рдорд╛рдгрдкрддреНрд░рд╛рдВрд╕рд╛рдареА рдЕрд░реНрдЬ',
      icon: FileText,
      category: 'рд╕реЗрд╡рд╛',
      requirements: ['рд╕рджрд╕реНрдпрддреНрд╡ рдкреНрд░рдорд╛рдгрдкрддреНрд░', 'рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб', 'рдЕрд░реНрдЬ рдлреЙрд░реНрдо'],
      processingTime: 'рел рджрд┐рд╡рд╕',
      fees: 'тВ╣резрежреж',
      color: 'from-indigo-500 to-blue-600'
    }
  ]

  const applicationProcess = [
    {
      step: 'рез',
      title: 'рдлреЙрд░реНрдо рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рд╛',
      description: 'рдЖрд╡рд╢реНрдпрдХ рдЕрд░реНрдЬ рдлреЙрд░реНрдо рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ рдХрд╛рд░реНрдпрд╛рд▓рдпрд╛рддреВрди рдорд┐рд│рд╡рд╛',
      icon: Download
    },
    {
      step: 'реи',
      title: 'рдлреЙрд░реНрдо рднрд░рд╛',
      description: 'рд╕рд░реНрд╡ рдЖрд╡рд╢реНрдпрдХ рдорд╛рд╣рд┐рддреА рдпреЛрдЧреНрдпрд░рд┐рддреНрдпрд╛ рднрд░рд╛',
      icon: FileText
    },
    {
      step: 'рей',
      title: 'рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЬреЛрдбрд╛',
      description: 'рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░рд╛рдВрдЪреНрдпрд╛ рдкреНрд░рддреА рдЬреЛрдбрд╛',
      icon: CheckCircle
    },
    {
      step: 'рек',
      title: 'рд╕рд╛рджрд░ рдХрд░рд╛',
      description: 'рдкреВрд░реНрдг рдЕрд░реНрдЬ рдХрд╛рд░реНрдпрд╛рд▓рдпрд╛рдд рд╕рд╛рджрд░ рдХрд░рд╛',
      icon: ArrowRight
    }
  ]

  const onlineServices = [
    {
      title: 'рдСрдирд▓рд╛рдЗрди рдЕрд░реНрдЬ',
      description: 'рдШрд░рдмрд╕рд▓реНрдпрд╛ рдЕрд░реНрдЬ рдХрд░рд╛',
      icon: 'ЁЯТ╗',
      available: true
    },
    {
      title: 'рд╕реНрдЯреЗрдЯрд╕ рдЯреНрд░реЕрдХрд┐рдВрдЧ',
      description: 'рдЕрд░реНрдЬрд╛рдЪреА рд╕реНрдерд┐рддреА рддрдкрд╛рд╕рд╛',
      icon: 'ЁЯУ▒',
      available: true
    },
    {
      title: 'рдбрд┐рдЬрд┐рдЯрд▓ рдкреЗрдореЗрдВрдЯ',
      description: 'рдСрдирд▓рд╛рдЗрди рд╢реБрд▓реНрдХ рднрд░рдгрд╛',
      icon: 'ЁЯТ│',
      available: true
    },
    {
      title: 'рдбреЙрдХреНрдпреБрдореЗрдВрдЯ рдЕрдкрд▓реЛрдб',
      description: 'рдХрд╛рдЧрджрдкрддреНрд░реЗ рдЕрдкрд▓реЛрдб рдХрд░рд╛',
      icon: 'ЁЯУД',
      available: false
    }
  ]

  const helpfulTips = [
    'рд╕рд░реНрд╡ рдХрд╛рдЧрджрдкрддреНрд░реЗ рд╕реНрдкрд╖реНрдЯ рдЖрдгрд┐ рд╡рд╛рдЪрдиреАрдп рдЕрд╕рд╛рд╡реАрдд',
    'рдлреЙрд░реНрдорд╛рддреАрд▓ рд╕рд░реНрд╡ рдорд╛рд╣рд┐рддреА рдпреЛрдЧреНрдп рдЕрд╕рд▓реНрдпрд╛рдЪреА рдЦрд╛рддреНрд░реА рдХрд░рд╛',
    'рдЖрд╡рд╢реНрдпрдХ рд╢реБрд▓реНрдХ DD рдХрд┐рдВрд╡рд╛ рдЪреЗрдХрджреНрд╡рд╛рд░реЗ рднрд░рд╛',
    'рдЕрд░реНрдЬ рд╕рд╛рджрд░ рдХрд░рддрд╛рдирд╛ рд░рд╕реАрдж рдирдХреНрдХреА рдШреНрдпрд╛',
    'рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╡реЗрд│реЗрдд рдзреИрд░реНрдп рдареЗрд╡рд╛',
    'рд╕рдВрд╢рдпрд╛рд╕реНрдкрдж рдмрд╛рдмреАрдВрд╕рд╛рдареА рдХрд╛рд░реНрдпрд╛рд▓рдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛'
  ]

  return (
    <main className="min-h-screen">
      <Header />
      {/* Advanced Jumbotron */}
      <Jumbotron
        backgroundImage="https://images.unsplash.com/photo-1450101499163-c8848c66ca85?q=80&w=2070&auto=format&fit=crop"
        title="рдЕрд░реНрдЬ рдлреЙрд░реНрдореНрд╕"
        subtitle="рд╕рд░реНрд╡ рд╕реЗрд╡рд╛рдВрд╕рд╛рдареА рдЖрд╡рд╢реНрдпрдХ рдЕрд░реНрдЬ рдлреЙрд░реНрдореНрд╕ рдПрдХрд╛рдЪ рдард┐рдХрд╛рдгреА - рд╕реЛрдкреНрдпрд╛ рдкреНрд░рдХреНрд░рд┐рдпреЗрдд рддреБрдордЪреНрдпрд╛ рдЧрд░рдЬрд╛ рдкреВрд░реНрдг рдХрд░рд╛"
        height="lg"
        overlay="gradient"
      />

      <section className="py-20 bg-gradient-to-br from-gray-50 to-white">
        <div className="container mx-auto px-4">
          {/* Introduction */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-6">рд╕рд░реНрд╡ рд╕реЗрд╡рд╛ рдПрдХрд╛рдЪ рдард┐рдХрд╛рдгреА</h2>
            <p className="text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
              рдЖрдордЪреНрдпрд╛ рд╕рдВрд╕реНрдереЗрдЪреНрдпрд╛ рд╡рд┐рд╡рд┐рдз рд╕реЗрд╡рд╛рдВрд╕рд╛рдареА рдЖрд╡рд╢реНрдпрдХ рдЕрд░реНрдЬ рдлреЙрд░реНрдореНрд╕ рдЖрдгрд┐ рддреНрдпрд╛рдВрдЪреА рд╕рдВрдкреВрд░реНрдг рдорд╛рд╣рд┐рддреА. 
              рд╕реЛрдкреНрдпрд╛ рдкреНрд░рдХреНрд░рд┐рдпреЗрдд рддреБрдордЪреНрдпрд╛ рд╕рд░реНрд╡ рдЧрд░рдЬрд╛ рдкреВрд░реНрдг рдХрд░рд╛.
            </p>
          </motion.div>

          {/* Application Forms Grid */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдЙрдкрд▓рдмреНрдз рдЕрд░реНрдЬ рдлреЙрд░реНрдореНрд╕</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {applicationForms.map((form, index) => {
                const IconComponent = form.icon
                return (
                  <motion.div
                    key={form.title}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                    viewport={{ once: true }}
                    whileHover={{ y: -5 }}
                  >
                    <Card className="h-full hover:shadow-xl transition-all duration-300">
                      {/* Header */}
                      <div className={`bg-gradient-to-r ${form.color} p-4 -mx-6 -mt-6 mb-6 rounded-t-lg`}>
                        <div className="flex items-center space-x-3 text-white">
                          <IconComponent className="w-8 h-8" />
                          <div>
                            <h4 className="text-lg font-bold">{form.title}</h4>
                            <span className="text-xs bg-white/20 px-2 py-1 rounded-full">{form.category}</span>
                          </div>
                        </div>
                      </div>

                      {/* Content */}
                      <div className="space-y-4">
                        <p className="text-gray-600">{form.description}</p>
                        
                        {/* Details */}
                        <div className="grid grid-cols-2 gap-4 text-sm">
                          <div>
                            <span className="font-semibold text-gray-800">рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╡реЗрд│:</span>
                            <div className="flex items-center space-x-1 mt-1">
                              <Clock className="w-4 h-4 text-blue-500" />
                              <span className="text-gray-600">{form.processingTime}</span>
                            </div>
                          </div>
                          <div>
                            <span className="font-semibold text-gray-800">рд╢реБрд▓реНрдХ:</span>
                            <div className="text-green-600 font-medium mt-1">{form.fees}</div>
                          </div>
                        </div>

                        {/* Requirements */}
                        <div>
                          <h5 className="font-semibold text-gray-800 mb-2">рдЖрд╡рд╢реНрдпрдХ рдХрд╛рдЧрджрдкрддреНрд░реЗ:</h5>
                          <div className="space-y-1">
                            {form.requirements.slice(0, 3).map((req, reqIndex) => (
                              <div key={req} className="flex items-center space-x-2">
                                <CheckCircle className="w-3 h-3 text-green-500 flex-shrink-0" />
                                <span className="text-gray-600 text-xs">{req}</span>
                              </div>
                            ))}
                            {form.requirements.length > 3 && (
                              <div className="text-gray-500 text-xs">+{form.requirements.length - 3} рдЕрдзрд┐рдХ</div>
                            )}
                          </div>
                        </div>

                        {/* Actions */}
                        <div className="flex space-x-2 pt-4">
                          <Button size="sm" className="flex-1 flex items-center justify-center space-x-1">
                            <Download className="w-4 h-4" />
                            <span>рдбрд╛рдЙрдирд▓реЛрдб</span>
                          </Button>
                          <Button variant="outline" size="sm" className="flex items-center justify-center">
                            <FileText className="w-4 h-4" />
                          </Button>
                        </div>
                      </div>
                    </Card>
                  </motion.div>
                )
              })}
            </div>
          </motion.div>

          {/* Application Process */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдЕрд░реНрдЬрд╛рдЪреА рдкреНрд░рдХреНрд░рд┐рдпрд╛</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
              {applicationProcess.map((process, index) => {
                const IconComponent = process.icon
                return (
                  <motion.div
                    key={process.step}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.2 }}
                    viewport={{ once: true }}
                    className="text-center relative"
                  >
                    <div className="relative mb-4">
                      <div className="w-16 h-16 mx-auto bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
                        {process.step}
                      </div>
                      {index < applicationProcess.length - 1 && (
                        <div className="hidden lg:block absolute top-8 left-full w-full h-0.5 bg-gradient-to-r from-primary-300 to-secondary-300 transform -translate-y-1/2"></div>
                      )}
                    </div>
                    <div className="mb-3">
                      <IconComponent className="w-8 h-8 mx-auto text-gray-600" />
                    </div>
                    <h4 className="text-lg font-semibold text-gray-800 mb-2">{process.title}</h4>
                    <p className="text-gray-600 text-sm">{process.description}</p>
                  </motion.div>
                )
              })}
            </div>
          </motion.div>

          {/* Online Services */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="mb-20"
          >
            <h3 className="text-3xl font-bold text-gray-800 text-center mb-12">рдСрдирд▓рд╛рдЗрди рд╕реЗрд╡рд╛</h3>
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
              {onlineServices.map((service, index) => (
                <motion.div
                  key={service.title}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ scale: 1.05 }}
                >
                  <Card className={`text-center p-6 ${service.available ? 'hover:shadow-xl' : 'opacity-60'} transition-all duration-300`}>
                    <div className="text-4xl mb-3">{service.icon}</div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">{service.title}</h4>
                    <p className="text-gray-600 text-sm mb-3">{service.description}</p>
                    <div className={`inline-block px-3 py-1 rounded-full text-xs font-medium ${
                      service.available 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-600'
                    }`}>
                      {service.available ? 'рдЙрдкрд▓рдмреНрдз' : 'рд▓рд╡рдХрд░рдЪ'}
                    </div>
                  </Card>
                </motion.div>
              ))}
            </div>
          </motion.div>

          {/* Helpful Tips */}
          <div className="grid lg:grid-cols-2 gap-12 mb-20">
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
            >
              <Card>
                <h3 className="text-2xl font-bold text-gray-800 mb-6">рдЙрдкрдпреБрдХреНрдд рд╕реВрдЪрдирд╛</h3>
                <div className="space-y-3">
                  {helpfulTips.map((tip, index) => (
                    <motion.div
                      key={tip}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.4, delay: index * 0.1 }}
                      viewport={{ once: true }}
                      className="flex items-start space-x-3"
                    >
                      <CheckCircle className="w-5 h-5 text-blue-500 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-700">{tip}</span>
                    </motion.div>
                  ))}
                </div>
              </Card>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="relative"
            >
              <div className="h-96 rounded-xl overflow-hidden shadow-xl">
                <Image
                  src="https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?q=80&w=2070&auto=format&fit=crop"
                  alt="Application Process"
                  fill
                  className="object-cover"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                <div className="absolute bottom-6 left-6 text-white">
                  <h4 className="text-xl font-bold mb-2">рд╕реЛрдкреНрдпрд╛ рдкреНрд░рдХреНрд░рд┐рдпреЗрдд</h4>
                  <p className="text-sm opacity-90">рддреБрдордЪреНрдпрд╛ рд╕рд░реНрд╡ рдЧрд░рдЬрд╛ рдкреВрд░реНрдг рдХрд░рд╛</p>
                </div>
              </div>
            </motion.div>
          </div>

          {/* Contact for Help */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center"
          >
            <Card className="bg-gradient-to-r from-blue-50 to-indigo-50">
              <h3 className="text-2xl font-bold text-gray-800 mb-4">рдорджрддреАрд╕рд╛рдареА рд╕рдВрдкрд░реНрдХ рдХрд░рд╛</h3>
              <p className="text-gray-600 mb-6">
                рдЕрд░реНрдЬ рднрд░рддрд╛рдирд╛ рдХрд╛рд╣реА рдЕрдбрдЪрдг рдЖрд▓реА рддрд░ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛. рдЖрдореНрд╣реА рддреБрдордЪреА рдорджрдд рдХрд░рдгреНрдпрд╛рд╕ рддрдпрд╛рд░ рдЖрд╣реЛрдд.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button size="lg" className="flex items-center space-x-2">
                  <Phone className="w-5 h-5" />
                  <span>рдлреЛрди рдХрд░рд╛</span>
                </Button>
                <Button variant="outline" size="lg" className="flex items-center space-x-2">
                  <Mail className="w-5 h-5" />
                  <span>рдИрдореЗрд▓ рдкрд╛рдард╡рд╛</span>
                </Button>
              </div>
              
              <div className="mt-6 grid md:grid-cols-2 gap-4">
                <div className="bg-white p-4 rounded-lg border border-blue-200">
                  <div className="flex items-center space-x-2 text-blue-800">
                    <Phone className="w-5 h-5" />
                    <span className="font-semibold">рдлреЛрди:</span>
                  </div>
                  <p className="text-blue-600 mt-1">+91 98765 43210</p>
                  <p className="text-blue-500 text-sm">рд╕рдХрд╛рд│реА реп рддреЗ рд╕рдВрдзреНрдпрд╛рдХрд╛рд│реА рем</p>
                </div>
                <div className="bg-white p-4 rounded-lg border border-blue-200">
                  <div className="flex items-center space-x-2 text-blue-800">
                    <Mail className="w-5 h-5" />
                    <span className="font-semibold">рдИрдореЗрд▓:</span>
                  </div>
                  <p className="text-blue-600 mt-1">info@kksspdhule.in</p>
                  <p className="text-blue-500 text-sm">реирек рддрд╛рд╕рд╛рдВрдд рдкреНрд░рддрд┐рд╕рд╛рдж</p>
                </div>
              </div>
            </Card>
          </motion.div>
        </div>
      </section>

      {/* Parallax Section with Service Stats */}
      <ParallaxSection
        backgroundImage="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?q=80&w=2070&auto=format&fit=crop"
        className="py-20"
      >
        <div className="container mx-auto px-4 text-center text-white">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h3 className="text-4xl font-bold mb-6">рд╕реЗрд╡реЗрдЪреА рдЖрдХрдбреЗрд╡рд╛рд░реА</h3>
            <p className="text-xl mb-12 max-w-3xl mx-auto opacity-90">
              рджрд░рд╡рд░реНрд╖реА рд╣рдЬрд╛рд░реЛ рдЕрд░реНрдЬ рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХрд░реВрди рдЖрдореНрд╣реА рд╕рджрд╕реНрдпрд╛рдВрдЪреА рд╕реЗрд╡рд╛ рдХрд░рддреЛ
            </p>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">рел,режрежреж+</div>
                <div className="text-sm opacity-90">рд╡рд╛рд░реНрд╖рд┐рдХ рдЕрд░реНрдЬ</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">репрео%</div>
                <div className="text-sm opacity-90">рдордВрдЬреБрд░реА рджрд░</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">рен рджрд┐рд╡рд╕</div>
                <div className="text-sm opacity-90">рд╕рд░рд╛рд╕рд░реА рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╡реЗрд│</div>
              </div>
              <div className="bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20">
                <div className="text-3xl font-bold mb-2">реирек/рен</div>
                <div className="text-sm opacity-90">рдСрдирд▓рд╛рдЗрди рд╕реЗрд╡рд╛</div>
              </div>
            </div>
          </motion.div>
        </div>
      </ParallaxSection>
      <Footer />
    </main>
  )
}
